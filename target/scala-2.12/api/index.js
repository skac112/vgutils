Index.PACKAGES = {"com.github.skac112.vgutils" : [{"name" : "com.github.skac112.vgutils.Angle", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/Angle$.html", "members_object" : [{"label" : "apply", "tail" : "(x: Double, y: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.apply", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#apply(x:Double,y:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "apply", "tail" : "(value: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.apply", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#apply(value:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "fromDeg", "tail" : "(deg: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.fromDeg", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#fromDeg(deg:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "rtdF", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.rtdF", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#rtdF:Double", "kind" : "lazy val"}, {"label" : "dtrF", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.dtrF", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#dtrF:Double", "kind" : "lazy val"}, {"label" : "normVal", "tail" : "(value: Double): Double", "member" : "com.github.skac112.vgutils.Angle.normVal", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#normVal(value:Double):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Angle$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Angle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "flatMap", "tail" : "(fmapF: (Double) ⇒ Angle): Angle", "member" : "com.github.skac112.vgutils.Angle.flatMap", "link" : "com\/github\/skac112\/vgutils\/Angle.html#flatMap(fmapF:Double=>com.github.skac112.vgutils.Angle):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "map", "tail" : "(mapF: (Double) ⇒ Double): Angle", "member" : "com.github.skac112.vgutils.Angle.map", "link" : "com\/github\/skac112\/vgutils\/Angle.html#map(mapF:Double=>Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "between", "tail" : "(start: Angle, end: Angle): Boolean", "member" : "com.github.skac112.vgutils.Angle.between", "link" : "com\/github\/skac112\/vgutils\/Angle.html#between(start:com.github.skac112.vgutils.Angle,end:com.github.skac112.vgutils.Angle):Boolean", "kind" : "def"}, {"label" : "toDeg", "tail" : "(): Double", "member" : "com.github.skac112.vgutils.Angle.toDeg", "link" : "com\/github\/skac112\/vgutils\/Angle.html#toDeg:Double", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.*", "link" : "com\/github\/skac112\/vgutils\/Angle.html#*(factor:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "-", "tail" : "(other: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.-", "link" : "com\/github\/skac112\/vgutils\/Angle.html#-(other:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "-", "tail" : "(other: Angle): Angle", "member" : "com.github.skac112.vgutils.Angle.-", "link" : "com\/github\/skac112\/vgutils\/Angle.html#-(other:com.github.skac112.vgutils.Angle):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "+", "tail" : "(other: Double): Angle", "member" : "com.github.skac112.vgutils.Angle.+", "link" : "com\/github\/skac112\/vgutils\/Angle.html#+(other:Double):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "+", "tail" : "(other: Angle): Angle", "member" : "com.github.skac112.vgutils.Angle.+", "link" : "com\/github\/skac112\/vgutils\/Angle.html#+(other:com.github.skac112.vgutils.Angle):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.Angle#<init>", "error" : "unsupported entity"}, {"member" : "com.github.skac112.vgutils.Angle#<init>", "error" : "unsupported entity"}, {"label" : "versor", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Angle.versor", "link" : "com\/github\/skac112\/vgutils\/Angle.html#versor:com.github.skac112.vgutils.Point", "kind" : "lazy val"}, {"label" : "unary_-", "tail" : ": Angle", "member" : "com.github.skac112.vgutils.Angle.unary_-", "link" : "com\/github\/skac112\/vgutils\/Angle.html#unary_-:com.github.skac112.vgutils.Angle", "kind" : "lazy val"}, {"label" : "fullComplement", "tail" : ": Angle", "member" : "com.github.skac112.vgutils.Angle.fullComplement", "link" : "com\/github\/skac112\/vgutils\/Angle.html#fullComplement:com.github.skac112.vgutils.Angle", "kind" : "lazy val"}, {"label" : "modulus", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.modulus", "link" : "com\/github\/skac112\/vgutils\/Angle.html#modulus:Double", "kind" : "lazy val"}, {"label" : "y", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.y", "link" : "com\/github\/skac112\/vgutils\/Angle.html#y:Double", "kind" : "lazy val"}, {"label" : "x", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.x", "link" : "com\/github\/skac112\/vgutils\/Angle.html#x:Double", "kind" : "lazy val"}, {"label" : "value", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.value", "link" : "com\/github\/skac112\/vgutils\/Angle.html#value:Double", "kind" : "lazy val"}, {"member" : "com.github.skac112.vgutils.Angle#<init>", "error" : "unsupported entity"}, {"label" : "initValue", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.initValue", "link" : "com\/github\/skac112\/vgutils\/Angle.html#initValue:Double", "kind" : "val"}, {"label" : "initY", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.initY", "link" : "com\/github\/skac112\/vgutils\/Angle.html#initY:Double", "kind" : "val"}, {"label" : "initX", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Angle.initX", "link" : "com\/github\/skac112\/vgutils\/Angle.html#initX:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Angle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Angle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Angle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Angle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Angle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Angle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Angle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Angle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Angle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Angle.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Angle.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Angle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Angle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Angle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/Angle.html", "kind" : "object"}, {"name" : "com.github.skac112.vgutils.Bounds", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/Bounds$.html", "members_object" : [{"label" : "forPts", "tail" : "(pts: Set[Point]): Bounds", "member" : "com.github.skac112.vgutils.Bounds.forPts", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#forPts(pts:Set[com.github.skac112.vgutils.Point]):com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "inf", "tail" : "(): Bounds", "member" : "com.github.skac112.vgutils.Bounds.inf", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#inf:com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "point", "tail" : "(pt: Point): Bounds", "member" : "com.github.skac112.vgutils.Bounds.point", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#point(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "empty", "tail" : "(): Bounds", "member" : "com.github.skac112.vgutils.Bounds.empty", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#empty:com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Bounds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zoom", "tail" : "(factor: Double): Bounds", "member" : "com.github.skac112.vgutils.Bounds.zoom", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#zoom(factor:Double):com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "move", "tail" : "(pt: Point): Bounds", "member" : "com.github.skac112.vgutils.Bounds.move", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#move(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "+", "tail" : "(other: Bounds): Bounds", "member" : "com.github.skac112.vgutils.Bounds.+", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#+(other:com.github.skac112.vgutils.Bounds):com.github.skac112.vgutils.Bounds", "kind" : "def"}, {"label" : "mid", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Bounds.mid", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#mid:com.github.skac112.vgutils.Point", "kind" : "lazy val"}, {"label" : "h", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Bounds.h", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#h:Double", "kind" : "lazy val"}, {"label" : "w", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Bounds.w", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#w:Double", "kind" : "lazy val"}, {"member" : "com.github.skac112.vgutils.Bounds#<init>", "error" : "unsupported entity"}, {"label" : "boundsType", "tail" : ": Symbol", "member" : "com.github.skac112.vgutils.Bounds.boundsType", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#boundsType:Symbol", "kind" : "val"}, {"label" : "br", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Bounds.br", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#br:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "tl", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Bounds.tl", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#tl:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Bounds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Bounds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/Bounds.html", "kind" : "object"}, {"name" : "com.github.skac112.vgutils.Color", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/Color$.html", "members_object" : [{"label" : "hex2double", "tail" : "(hex: String): Double", "member" : "com.github.skac112.vgutils.Color.hex2double", "link" : "com\/github\/skac112\/vgutils\/Color$.html#hex2double(hex:String):Double", "kind" : "def"}, {"label" : "hex2int", "tail" : "(hex: String): Int", "member" : "com.github.skac112.vgutils.Color.hex2int", "link" : "com\/github\/skac112\/vgutils\/Color$.html#hex2int(hex:String):Int", "kind" : "def"}, {"label" : "transparent", "tail" : ": Color", "member" : "com.github.skac112.vgutils.Color.transparent", "link" : "com\/github\/skac112\/vgutils\/Color$.html#transparent:com.github.skac112.vgutils.Color", "kind" : "val"}, {"label" : "hsl", "tail" : "(hue: Angle, sat: Double, l: Double): Color", "member" : "com.github.skac112.vgutils.Color.hsl", "link" : "com\/github\/skac112\/vgutils\/Color$.html#hsl(hue:com.github.skac112.vgutils.Angle,sat:Double,l:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "pi_3_inv", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.pi_3_inv", "link" : "com\/github\/skac112\/vgutils\/Color$.html#pi_3_inv:Double", "kind" : "lazy val"}, {"label" : "normalize", "tail" : "(v: Double): Double", "member" : "com.github.skac112.vgutils.Color.normalize", "link" : "com\/github\/skac112\/vgutils\/Color$.html#normalize(v:Double):Double", "kind" : "def"}, {"label" : "yellow", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.yellow", "link" : "com\/github\/skac112\/vgutils\/Color$.html#yellow(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "magenta", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.magenta", "link" : "com\/github\/skac112\/vgutils\/Color$.html#magenta(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "cyan", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.cyan", "link" : "com\/github\/skac112\/vgutils\/Color$.html#cyan(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "blue", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.blue", "link" : "com\/github\/skac112\/vgutils\/Color$.html#blue(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "green", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.green", "link" : "com\/github\/skac112\/vgutils\/Color$.html#green(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "red", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.red", "link" : "com\/github\/skac112\/vgutils\/Color$.html#red(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Color$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Color$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Color$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Color$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Color$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Color$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Color$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Color$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Color$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/Color$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Color$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/Color$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/Color$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Color$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Color$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Color$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "addL", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.addL", "link" : "com\/github\/skac112\/vgutils\/Color.html#addL(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "addS", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.addS", "link" : "com\/github\/skac112\/vgutils\/Color.html#addS(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "addH", "tail" : "(v: Angle): Color", "member" : "com.github.skac112.vgutils.Color.addH", "link" : "com\/github\/skac112\/vgutils\/Color.html#addH(v:com.github.skac112.vgutils.Angle):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "addB", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.addB", "link" : "com\/github\/skac112\/vgutils\/Color.html#addB(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "addG", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.addG", "link" : "com\/github\/skac112\/vgutils\/Color.html#addG(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "addR", "tail" : "(v: Double): Color", "member" : "com.github.skac112.vgutils.Color.addR", "link" : "com\/github\/skac112\/vgutils\/Color.html#addR(v:Double):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "s", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.s", "link" : "com\/github\/skac112\/vgutils\/Color.html#s:Double", "kind" : "lazy val"}, {"label" : "l", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.l", "link" : "com\/github\/skac112\/vgutils\/Color.html#l:Double", "kind" : "lazy val"}, {"label" : "h", "tail" : ": Angle", "member" : "com.github.skac112.vgutils.Color.h", "link" : "com\/github\/skac112\/vgutils\/Color.html#h:com.github.skac112.vgutils.Angle", "kind" : "lazy val"}, {"label" : "toString", "tail" : ": String", "member" : "com.github.skac112.vgutils.Color.toString", "link" : "com\/github\/skac112\/vgutils\/Color.html#toString:String", "kind" : "lazy val"}, {"label" : "-:", "tail" : "(other: Color): Color", "member" : "com.github.skac112.vgutils.Color.-:", "link" : "com\/github\/skac112\/vgutils\/Color.html#-:(other:com.github.skac112.vgutils.Color):com.github.skac112.vgutils.Color", "kind" : "def"}, {"label" : "+:", "tail" : "(other: Color): Color", "member" : "com.github.skac112.vgutils.Color.+:", "link" : "com\/github\/skac112\/vgutils\/Color.html#+:(other:com.github.skac112.vgutils.Color):com.github.skac112.vgutils.Color", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.Color#<init>", "error" : "unsupported entity"}, {"member" : "com.github.skac112.vgutils.Color#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.a", "link" : "com\/github\/skac112\/vgutils\/Color.html#a:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.b", "link" : "com\/github\/skac112\/vgutils\/Color.html#b:Double", "kind" : "val"}, {"label" : "g", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.g", "link" : "com\/github\/skac112\/vgutils\/Color.html#g:Double", "kind" : "val"}, {"label" : "r", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Color.r", "link" : "com\/github\/skac112\/vgutils\/Color.html#r:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Color.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Color.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Color.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Color.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Color.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Color.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Color.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Color.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Color.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Color.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Color.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Color.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Color.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Color.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/Color.html", "kind" : "object"}, {"name" : "com.github.skac112.vgutils.Line", "shortDescription" : "Straight line parameterized by equation: ax + by + c = 0.", "members_case class" : [{"label" : "isParallelTo", "tail" : "(other: Line): Boolean", "member" : "com.github.skac112.vgutils.Line.isParallelTo", "link" : "com\/github\/skac112\/vgutils\/Line.html#isParallelTo(other:com.github.skac112.vgutils.Line):Boolean", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.Line#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Line.c", "link" : "com\/github\/skac112\/vgutils\/Line.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Line.b", "link" : "com\/github\/skac112\/vgutils\/Line.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Line.a", "link" : "com\/github\/skac112\/vgutils\/Line.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Line.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Line.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Line.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Line.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Line.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Line.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Line.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Line.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Line.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Line.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Line.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Line.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Line.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Line.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Line.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Line.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/Line.html", "kind" : "case class"}, {"name" : "com.github.skac112.vgutils.LineSec", "shortDescription" : "", "members_case class" : [{"label" : "i", "tail" : "(other: LineSec): Option[Point]", "member" : "com.github.skac112.vgutils.LineSec.i", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#i(other:com.github.skac112.vgutils.LineSec):Option[com.github.skac112.vgutils.Point]", "kind" : "def"}, {"label" : "len2", "tail" : ": Double", "member" : "com.github.skac112.vgutils.LineSec.len2", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#len2:Double", "kind" : "lazy val"}, {"label" : "len", "tail" : ": Double", "member" : "com.github.skac112.vgutils.LineSec.len", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#len:Double", "kind" : "lazy val"}, {"label" : "line", "tail" : ": Line", "member" : "com.github.skac112.vgutils.LineSec.line", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#line:com.github.skac112.vgutils.Line", "kind" : "lazy val"}, {"member" : "com.github.skac112.vgutils.LineSec#<init>", "error" : "unsupported entity"}, {"label" : "p2", "tail" : ": Point", "member" : "com.github.skac112.vgutils.LineSec.p2", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#p2:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "p1", "tail" : ": Point", "member" : "com.github.skac112.vgutils.LineSec.p1", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#p1:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/LineSec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/LineSec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/LineSec.html", "kind" : "case class"}, {"name" : "com.github.skac112.vgutils.MathUtils", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/MathUtils$.html", "members_object" : [{"label" : "c2i", "tail" : "(p1: Point, r1: Double, p2: Point, r2: Double): Set[Point]", "member" : "com.github.skac112.vgutils.MathUtils.c2i", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#c2i(p1:com.github.skac112.vgutils.Point,r1:Double,p2:com.github.skac112.vgutils.Point,r2:Double):Set[com.github.skac112.vgutils.Point]", "kind" : "def"}, {"label" : "line2p", "tail" : "(p1: Point, p2: Point): (Double, Double, Double)", "member" : "com.github.skac112.vgutils.MathUtils.line2p", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#line2p(p1:com.github.skac112.vgutils.Point,p2:com.github.skac112.vgutils.Point):(Double,Double,Double)", "kind" : "def"}, {"label" : "c3p", "tail" : "(p1: Point, p2: Point, p3: Point): (Point, Double)", "member" : "com.github.skac112.vgutils.MathUtils.c3p", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#c3p(p1:com.github.skac112.vgutils.Point,p2:com.github.skac112.vgutils.Point,p3:com.github.skac112.vgutils.Point):(com.github.skac112.vgutils.Point,Double)", "kind" : "def"}, {"label" : "linearSys2", "tail" : "(a1: Double, b1: Double, c1: Double, a2: Double, b2: Double, c2: Double): (Double, Double)", "member" : "com.github.skac112.vgutils.MathUtils.linearSys2", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#linearSys2(a1:Double,b1:Double,c1:Double,a2:Double,b2:Double,c2:Double):(Double,Double)", "kind" : "def"}, {"label" : "quadEqReal", "tail" : "(a: Double, b: Double, c: Double): Set[Double]", "member" : "com.github.skac112.vgutils.MathUtils.quadEqReal", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#quadEqReal(a:Double,b:Double,c:Double):Set[Double]", "kind" : "def"}, {"label" : "cTanTo3c", "tail" : "(x1: Double, y1: Double, r1: Double, loc1: Boolean, x2: Double, y2: Double, r2: Double, loc2: Boolean, x3: Double, y3: Double, r3: Double, loc3: Boolean): Set[(Double, Double, Double)]", "member" : "com.github.skac112.vgutils.MathUtils.cTanTo3c", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#cTanTo3c(x1:Double,y1:Double,r1:Double,loc1:Boolean,x2:Double,y2:Double,r2:Double,loc2:Boolean,x3:Double,y3:Double,r3:Double,loc3:Boolean):Set[(Double,Double,Double)]", "kind" : "def"}, {"label" : "cTanTo2c", "tail" : "(x1: Double, y1: Double, r1: Double, loc1: Boolean, x2: Double, y2: Double, r2: Double, loc2: Boolean, r: Double): Set[(Double, Double)]", "member" : "com.github.skac112.vgutils.MathUtils.cTanTo2c", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#cTanTo2c(x1:Double,y1:Double,r1:Double,loc1:Boolean,x2:Double,y2:Double,r2:Double,loc2:Boolean,r:Double):Set[(Double,Double)]", "kind" : "def"}, {"label" : "EllipseCalc", "tail" : "", "member" : "com.github.skac112.vgutils.MathUtils.EllipseCalc", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#EllipseCalc", "kind" : "object"}, {"label" : "invFun", "tail" : "(fun: RealFun, minArg: Double, maxArg: Double, eps: Double): RealFun", "member" : "com.github.skac112.vgutils.MathUtils.invFun", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#invFun(fun:com.github.skac112.vgutils.MathUtils.RealFun,minArg:Double,maxArg:Double,eps:Double):com.github.skac112.vgutils.MathUtils.RealFun", "kind" : "def"}, {"label" : "simpsonIntegr", "tail" : "(fun: RealFun, from: Double, to: Double, n2: Int): Double", "member" : "com.github.skac112.vgutils.MathUtils.simpsonIntegr", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#simpsonIntegr(fun:com.github.skac112.vgutils.MathUtils.RealFun,from:Double,to:Double,n2:Int):Double", "kind" : "def"}, {"label" : "integrate", "tail" : "(fun: RealFun, from: Double, to: Double): Double", "member" : "com.github.skac112.vgutils.MathUtils.integrate", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#integrate(fun:com.github.skac112.vgutils.MathUtils.RealFun,from:Double,to:Double):Double", "kind" : "def"}, {"label" : "RealFun", "tail" : "", "member" : "com.github.skac112.vgutils.MathUtils.RealFun", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#RealFun=Double=>Double", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/MathUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.skac112.vgutils.Point", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/Point$.html", "members_object" : [{"label" : "withAngle", "tail" : "(dir: Angle, length: Double): Point", "member" : "com.github.skac112.vgutils.Point.withAngle", "link" : "com\/github\/skac112\/vgutils\/Point$.html#withAngle(dir:com.github.skac112.vgutils.Angle,length:Double):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "versor", "tail" : "(ang: Angle): Point", "member" : "com.github.skac112.vgutils.Point.versor", "link" : "com\/github\/skac112\/vgutils\/Point$.html#versor(ang:com.github.skac112.vgutils.Angle):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "smallDist", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Point.smallDist", "link" : "com\/github\/skac112\/vgutils\/Point$.html#smallDist:Double", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Point$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Point$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Point$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Point$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Point$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Point$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Point$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Point$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Point$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/Point$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Point$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/Point$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/Point$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Point$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Point$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Point$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "flatMap", "tail" : "(fmapF: ((Double, Double)) ⇒ Point): Point", "member" : "com.github.skac112.vgutils.Point.flatMap", "link" : "com\/github\/skac112\/vgutils\/Point.html#flatMap(fmapF:((Double,Double))=>com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "map", "tail" : "(mapF: ((Double, Double)) ⇒ (Double, Double)): Point", "member" : "com.github.skac112.vgutils.Point.map", "link" : "com\/github\/skac112\/vgutils\/Point.html#map(mapF:((Double,Double))=>(Double,Double)):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "ang", "tail" : "(other: Point): Angle", "member" : "com.github.skac112.vgutils.Point.ang", "link" : "com\/github\/skac112\/vgutils\/Point.html#ang(other:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Angle", "kind" : "def"}, {"label" : "angSig", "tail" : "(other: Point): Double", "member" : "com.github.skac112.vgutils.Point.angSig", "link" : "com\/github\/skac112\/vgutils\/Point.html#angSig(other:com.github.skac112.vgutils.Point):Double", "kind" : "def"}, {"label" : "rot", "tail" : "(Rot: Rotation): Point", "member" : "com.github.skac112.vgutils.Point.rot", "link" : "com\/github\/skac112\/vgutils\/Point.html#rot(Rot:com.github.skac112.vgutils.transform.Rotation):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "rot", "tail" : "(Deg: Double, Pivot: Point): Point", "member" : "com.github.skac112.vgutils.Point.rot", "link" : "com\/github\/skac112\/vgutils\/Point.html#rot(Deg:Double,Pivot:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "r", "tail" : "(deg: Double): Point", "member" : "com.github.skac112.vgutils.Point.r", "link" : "com\/github\/skac112\/vgutils\/Point.html#r(deg:Double):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "rot", "tail" : "(Deg: Double): Point", "member" : "com.github.skac112.vgutils.Point.rot", "link" : "com\/github\/skac112\/vgutils\/Point.html#rot(Deg:Double):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "closeTo", "tail" : "(other: Point): Boolean", "member" : "com.github.skac112.vgutils.Point.closeTo", "link" : "com\/github\/skac112\/vgutils\/Point.html#closeTo(other:com.github.skac112.vgutils.Point):Boolean", "kind" : "def"}, {"label" : "\/", "tail" : "(Factor: Double): Point", "member" : "com.github.skac112.vgutils.Point.\/", "link" : "com\/github\/skac112\/vgutils\/Point.html#\/(Factor:Double):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "**", "tail" : "(Other: Point): Double", "member" : "com.github.skac112.vgutils.Point.**", "link" : "com\/github\/skac112\/vgutils\/Point.html#**(Other:com.github.skac112.vgutils.Point):Double", "kind" : "def"}, {"label" : "*", "tail" : "(Other: Point): Double", "member" : "com.github.skac112.vgutils.Point.*", "link" : "com\/github\/skac112\/vgutils\/Point.html#*(Other:com.github.skac112.vgutils.Point):Double", "kind" : "def"}, {"label" : "dist", "tail" : "(Other: Point): Double", "member" : "com.github.skac112.vgutils.Point.dist", "link" : "com\/github\/skac112\/vgutils\/Point.html#dist(Other:com.github.skac112.vgutils.Point):Double", "kind" : "def"}, {"label" : "*", "tail" : "(Factor: Double): Point", "member" : "com.github.skac112.vgutils.Point.*", "link" : "com\/github\/skac112\/vgutils\/Point.html#*(Factor:Double):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "-", "tail" : "(Other: Point): Point", "member" : "com.github.skac112.vgutils.Point.-", "link" : "com\/github\/skac112\/vgutils\/Point.html#-(Other:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "+", "tail" : "(Other: Point): Point", "member" : "com.github.skac112.vgutils.Point.+", "link" : "com\/github\/skac112\/vgutils\/Point.html#+(Other:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "angle", "tail" : ": Angle", "member" : "com.github.skac112.vgutils.Point.angle", "link" : "com\/github\/skac112\/vgutils\/Point.html#angle:com.github.skac112.vgutils.Angle", "kind" : "lazy val"}, {"label" : "versor", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Point.versor", "link" : "com\/github\/skac112\/vgutils\/Point.html#versor:com.github.skac112.vgutils.Point", "kind" : "lazy val"}, {"label" : "unary_-", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Point.unary_-", "link" : "com\/github\/skac112\/vgutils\/Point.html#unary_-:com.github.skac112.vgutils.Point", "kind" : "lazy val"}, {"label" : "inv", "tail" : ": Point", "member" : "com.github.skac112.vgutils.Point.inv", "link" : "com\/github\/skac112\/vgutils\/Point.html#inv:com.github.skac112.vgutils.Point", "kind" : "lazy val"}, {"label" : "modulus2", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Point.modulus2", "link" : "com\/github\/skac112\/vgutils\/Point.html#modulus2:Double", "kind" : "lazy val"}, {"label" : "modulus", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Point.modulus", "link" : "com\/github\/skac112\/vgutils\/Point.html#modulus:Double", "kind" : "lazy val"}, {"member" : "com.github.skac112.vgutils.Point#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Point.y", "link" : "com\/github\/skac112\/vgutils\/Point.html#y:Double", "kind" : "val"}, {"label" : "x", "tail" : ": Double", "member" : "com.github.skac112.vgutils.Point.x", "link" : "com\/github\/skac112\/vgutils\/Point.html#x:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/Point.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/Point.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/Point.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/Point.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/Point.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/Point.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/Point.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/Point.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/Point.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/Point.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/Point.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/Point.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Point.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/Point.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/Point.html", "kind" : "object"}], "com.github.skac112" : [], "com.github.skac112.vgutils.transform" : [{"name" : "com.github.skac112.vgutils.transform.Affine", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html", "members_class" : [{"label" : "inv", "tail" : ": Affine", "member" : "com.github.skac112.vgutils.transform.Affine.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#inv:com.github.skac112.vgutils.transform.Affine", "kind" : "lazy val"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.transform.Affine#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#e:Double", "kind" : "val"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.d", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.c", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.b", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.a", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "mirror", "tail" : "(a: Double, b: Double, c: Double): Affine", "member" : "com.github.skac112.vgutils.transform.Affine.mirror", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#mirror(a:Double,b:Double,c:Double):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Affine$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/skac112\/vgutils\/transform\/Affine.html", "kind" : "object"}, {"name" : "com.github.skac112.vgutils.transform.GenericLinear", "shortDescription" : "", "members_class" : [{"label" : "inv", "tail" : ": Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#inv:com.github.skac112.vgutils.transform.Linear", "kind" : "lazy val"}, {"label" : "det", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.GenericLinear.det", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#det:Double", "kind" : "lazy val"}, {"label" : "\/", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.\/", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#\/(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.*", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#*(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "-", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.-", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#-(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "+", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.+", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#+(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.transform.GenericLinear#<init>", "error" : "unsupported entity"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#e:Double", "kind" : "val"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.d", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.c", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.b", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.a", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/skac112\/vgutils\/transform\/GenericLinear.html", "kind" : "class"}, {"name" : "com.github.skac112.vgutils.transform.Linear", "shortDescription" : "Transformacja liniowa.", "members_case class" : [{"member" : "com.github.skac112.vgutils.transform.Linear#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Linear.d", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Linear.c", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Linear.b", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Linear.a", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#a:Double", "kind" : "val"}, {"label" : "inv", "tail" : ": Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#inv:com.github.skac112.vgutils.transform.Linear", "kind" : "lazy val"}, {"label" : "det", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.GenericLinear.det", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#det:Double", "kind" : "lazy val"}, {"label" : "\/", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.\/", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#\/(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.*", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#*(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "-", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.-", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#-(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "+", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.+", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#+(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#e:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Linear.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/transform\/Linear.html", "kind" : "case class"}, {"name" : "com.github.skac112.vgutils.transform.Rotation", "shortDescription" : "", "members_case class" : [{"label" : "rad", "tail" : "(): Rotation", "member" : "com.github.skac112.vgutils.transform.Rotation.rad", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#rad:com.github.skac112.vgutils.transform.Rotation", "kind" : "def"}, {"label" : "deg", "tail" : "(): Rotation", "member" : "com.github.skac112.vgutils.transform.Rotation.deg", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#deg:com.github.skac112.vgutils.transform.Rotation", "kind" : "def"}, {"label" : "around", "tail" : "(NewPivot: Point): Rotation", "member" : "com.github.skac112.vgutils.transform.Rotation.around", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#around(NewPivot:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Rotation", "kind" : "def"}, {"label" : "si", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Rotation.si", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#si:Double", "kind" : "val"}, {"label" : "co", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Rotation.co", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#co:Double", "kind" : "val"}, {"member" : "com.github.skac112.vgutils.transform.Rotation#<init>", "error" : "unsupported entity"}, {"label" : "pivot", "tail" : ": Point", "member" : "com.github.skac112.vgutils.transform.Rotation.pivot", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#pivot:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "angle", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Rotation.angle", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#angle:Double", "kind" : "val"}, {"label" : "inv", "tail" : ": Affine", "member" : "com.github.skac112.vgutils.transform.Affine.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#inv:com.github.skac112.vgutils.transform.Affine", "kind" : "lazy val"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#e:Double", "kind" : "val"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.d", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.c", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.b", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.a", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/transform\/Rotation.html", "kind" : "case class"}, {"name" : "com.github.skac112.vgutils.transform.Scale", "shortDescription" : "", "members_case class" : [{"label" : "uniform", "tail" : "(scale: Double): Scale", "member" : "com.github.skac112.vgutils.transform.Scale.uniform", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#uniform(scale:Double):com.github.skac112.vgutils.transform.Scale", "kind" : "def"}, {"member" : "com.github.skac112.vgutils.transform.Scale#<init>", "error" : "unsupported entity"}, {"label" : "scaleY", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Scale.scaleY", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#scaleY:Double", "kind" : "val"}, {"label" : "scaleX", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Scale.scaleX", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#scaleX:Double", "kind" : "val"}, {"label" : "inv", "tail" : ": Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#inv:com.github.skac112.vgutils.transform.Linear", "kind" : "lazy val"}, {"label" : "det", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.GenericLinear.det", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#det:Double", "kind" : "lazy val"}, {"label" : "\/", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.\/", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#\/(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): Linear", "member" : "com.github.skac112.vgutils.transform.GenericLinear.*", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#*(factor:Double):com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "-", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.-", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#-(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "+", "tail" : "(pt: Point): Affine", "member" : "com.github.skac112.vgutils.transform.GenericLinear.+", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#+(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Affine", "kind" : "def"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#e:Double", "kind" : "val"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.d", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.c", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.b", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.a", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Scale.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/transform\/Scale.html", "kind" : "case class"}, {"name" : "com.github.skac112.vgutils.transform.Transl", "shortDescription" : "", "object" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html", "members_object" : [{"label" : "PointToTransl", "tail" : "(pt: Point): Transl", "member" : "com.github.skac112.vgutils.transform.Transl.PointToTransl", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#PointToTransl(pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.transform.Transl", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.skac112.vgutils.transform.Transl#<init>", "error" : "unsupported entity"}, {"label" : "vec", "tail" : ": Point", "member" : "com.github.skac112.vgutils.transform.Transl.vec", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#vec:com.github.skac112.vgutils.Point", "kind" : "val"}, {"label" : "inv", "tail" : ": Affine", "member" : "com.github.skac112.vgutils.transform.Affine.inv", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#inv:com.github.skac112.vgutils.transform.Affine", "kind" : "lazy val"}, {"label" : "translPt", "tail" : "(): Point", "member" : "com.github.skac112.vgutils.transform.Affine.translPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#translPt:com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "transl", "tail" : "(): Transl", "member" : "com.github.skac112.vgutils.transform.Affine.transl", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#transl:com.github.skac112.vgutils.transform.Transl", "kind" : "def"}, {"label" : "lin", "tail" : "(): Linear", "member" : "com.github.skac112.vgutils.transform.Affine.lin", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#lin:com.github.skac112.vgutils.transform.Linear", "kind" : "def"}, {"label" : "transPt", "tail" : "(Pt: Point): Point", "member" : "com.github.skac112.vgutils.transform.Affine.transPt", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#transPt(Pt:com.github.skac112.vgutils.Point):com.github.skac112.vgutils.Point", "kind" : "def"}, {"label" : "f", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.f", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#f:Double", "kind" : "val"}, {"label" : "e", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.e", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#e:Double", "kind" : "val"}, {"label" : "d", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.d", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#d:Double", "kind" : "val"}, {"label" : "c", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.c", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#c:Double", "kind" : "val"}, {"label" : "b", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.b", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#b:Double", "kind" : "val"}, {"label" : "a", "tail" : ": Double", "member" : "com.github.skac112.vgutils.transform.Affine.a", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#a:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/skac112\/vgutils\/transform\/Transl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/skac112\/vgutils\/transform\/Transl.html", "kind" : "object"}], "com" : [], "com.github" : []};